@inject IJSRuntime JSRuntime

@if (IsVisible)
{
    <div class="toast @ToastType.ToLower()" @onclick="HideToast">
        <div class="toast-content">
            <span>@Message</span>
            <button class="toast-close" @onclick="HideToast">×</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public string Message { get; set; } = "";

    [Parameter]
    public string ToastType { get; set; } = "info"; // success, error, warning, info

    [Parameter]
    public EventCallback OnClose { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (IsVisible)
        {
            await Task.Delay(5000); // Biến mất sau 5 giây
            await HideToast();
        }
    }

    private async Task HideToast()
    {
        IsVisible = false;
        await OnClose.InvokeAsync();
        StateHasChanged();
    }
}